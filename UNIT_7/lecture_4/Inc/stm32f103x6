#ifndef STM32F103X6_H
#define STM32F103X6_H



#include <stdlib.h>
#include <stdint.h>

/*BASE ADRESSES FOR MEMORIES*/
#define FLASH_MEMORY_BASE   	 		0x8000000UL
#define SRAM_MEMORY_BASE    	 		0x20000000UL
#define SYSTEM_MEMORY_BASE	   		    0x1FFFF000UL
#define PERIPHERALS_MEMORY_BASE  	    0x40000000UL

#define CORTEX_M3_INTERNAL_PERIPHERALS  0xE0000000UL
#define NVIC_BASE                        0xE000E100UL

// Interrupt Set-Enable Registers
#define NVIC_ISER0                       (*(volatile uint32_t*)(NVIC_BASE + 0x00))
#define NVIC_ISER1                       (*(volatile uint32_t*)(NVIC_BASE + 0x04))
#define NVIC_ISER2                       (*(volatile uint32_t*)(NVIC_BASE + 0x08))

// Interrupt Clear-Enable Registers
#define NVIC_ICER0                       (*(volatile uint32_t*)(NVIC_BASE + 0x80))
#define NVIC_ICER1                       (*(volatile uint32_t*)(NVIC_BASE + 0x84))
#define NVIC_ICER2                       (*(volatile uint32_t*)(NVIC_BASE + 0x88))

/*BASE ADRESSES FOR PERIPHERALS*/
#define RCC_BASE 	0x40021000UL
#define GPIOA_BASE  0x40010800UL
#define GPIOB_BASE  0x40010C00UL
#define GPIOC_BASE  0x40011000UL
#define GPIOD_BASE  0x40011400UL
#define AFIO_BASE 	0x40010000UL
#define EXTI_BASE 	0x40010400UL


typedef struct
{
	volatile uint32_t CRL;
	volatile uint32_t CRH;
	volatile uint32_t IDR;
	volatile uint32_t ODR;
	volatile uint32_t BSRR;
	volatile uint32_t BRR;
	volatile uint32_t LCKR;
}Gpio_typedef;

typedef struct
{
	volatile uint32_t EVCR;
	volatile uint32_t MAPR;
	volatile uint32_t EXTICR[4];
    uint32_t resvred;
	volatile uint32_t MAPR2;
}AFIO_typedef;

typedef struct
{
	volatile uint32_t CR;
	volatile uint32_t CFGR;
	volatile uint32_t CIR;
	volatile uint32_t APB2RSTR;
	volatile uint32_t APB1RSTR;
	volatile uint32_t AHBENR;
	volatile uint32_t APB2ENR;
	volatile uint32_t APB1ENR;
	volatile uint32_t BDCR;
	volatile uint32_t CSR;
	volatile uint32_t AHBSTR;
}RCC_typedef;

typedef struct
{
	volatile uint32_t IMR;
	volatile uint32_t EMR;
	volatile uint32_t RTSR;
	volatile uint32_t FTSR;
	volatile uint32_t SWIER;
	volatile uint32_t PR;
}EXTI_typedef;


#define GPIOA ((Gpio_typedef*)GPIOA_BASE)
#define GPIOB ((Gpio_typedef*)(GPIOB_BASE))
#define GPIOC ((Gpio_typedef*)GPIOC_BASE)
#define GPIOD ((Gpio_typedef*)GPIOD_BASE)

#define RCC  ((RCC_typedef*)RCC_BASE)
#define EXTI ((EXTI_typedef*)EXTI_BASE)

#define AFIO ((AFIO_typedef*)AFIO_BASE)

#define RCC_GPIOA_EN_CLK() ((RCC->APB2ENR)|=(1<<2))
#define RCC_GPIOB_EN_CLK() ((RCC->APB2ENR)|=(1<<3))
#define RCC_GPIOC_EN_CLK() ((RCC->APB2ENR)|=(1<<4))
#define RCC_GPIOD_EN_CLK() ((RCC->APB2ENR)|=(1<<5))
#define RCC_GPIOE_EN_CLK() ((RCC->APB2ENR)|=(1<<6))
#define RCC_AFIO_EN_CLK()  ((RCC->APB2ENR)|=(1<<0))

#define EXTI0_IRQ		6
#define EXTI1_IRQ		7
#define EXTI2_IRQ		8
#define EXTI3_IRQ		9
#define EXTI4_IRQ		10
#define EXTI5_IRQ		23
#define EXTI6_IRQ		23
#define EXTI7_IRQ		23
#define EXTI8_IRQ		23
#define EXTI9_IRQ		23
#define EXTI10_IRQ		40
#define EXTI11_IRQ		40
#define EXTI12_IRQ		40
#define EXTI13_IRQ		40
#define EXTI14_IRQ		40
#define EXTI15_IRQ		40

#define NVIC_EXTI0_IRQ6_ENABLE 		(NVIC_ISER0 |= (1<<6))
#define NVIC_EXTI1_IRQ7_ENABLE 		(NVIC_ISER0 |= (1<<7))
#define NVIC_EXTI2_IRQ8_ENABLE 		(NVIC_ISER0 |= (1<<8))
#define NVIC_EXTI3_IRQ9_ENABLE 		(NVIC_ISER0 |= (1<<9))
#define NVIC_EXTI4_IRQ10_ENABLE	    (NVIC_ISER0 |= (1<<10))
#define NVIC_EXTI5_9_IRQ23_ENABLE 	(NVIC_ISER0 |= (1<<23))
#define NVIC_EXTI10_15_IRQ40_ENABLE (NVIC_ISER1 |= (1<<8))

#define NVIC_EXTI0_IRQ6_DISABLE 		(NVIC_ICER0 &= ~(1<<6))
#define NVIC_EXTI1_IRQ7_DISABLE 		(NVIC_ICER0 &= ~(1<<7))
#define NVIC_EXTI2_IRQ8_DISABLE 		(NVIC_ICER0 &= ~(1<<8))
#define NVIC_EXTI3_IRQ9_DISABLE 		(NVIC_ICER0 &= ~(1<<9))
#define NVIC_EXTI4_IRQ10_DISABLE	    (NVIC_ICER0 &= ~(1<<10))
#define NVIC_EXTI5_9_IRQ23_DISABLE 		(NVIC_ICER0 &= ~(1<<23))
#define NVIC_EXTI10_15_IRQ40_DISABLE	(NVIC_ICER1 &= ~(1<<8))



#endif // {STM32F103X6_H}
